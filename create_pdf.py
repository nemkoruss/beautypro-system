from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os
from database import db, Service
from config import config

def generate_price_list():
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç—ã
        fonts_dir = 'fonts'
        bold_font_path = os.path.join(fonts_dir, 'DejaVuSans-Bold.ttf')
        regular_font_path = os.path.join(fonts_dir, 'DejaVuSans.ttf')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–≤
        if not os.path.exists(bold_font_path) or not os.path.exists(regular_font_path):
            print("Font files not found. Using default fonts.")
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –µ—Å–ª–∏ –Ω–∞—à–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
            bold_font = 'Helvetica-Bold'
            regular_font = 'Helvetica'
        else:
            pdfmetrics.registerFont(TTFont('DejaVuSans-Bold', bold_font_path))
            pdfmetrics.registerFont(TTFont('DejaVuSans', regular_font_path))
            bold_font = 'DejaVuSans-Bold'
            regular_font = 'DejaVuSans'
        
        # –°–æ–∑–¥–∞–µ–º PDF
        filename = "price_list.pdf"
        c = canvas.Canvas(filename, pagesize=A4)
        width, height = A4
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        c.setFont(bold_font, 16)
        c.drawString(50, height - 50, "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç —Å—Ç—É–¥–∏–∏ –º–∞–Ω–∏–∫—é—Ä–∞")
        c.line(50, height - 55, width - 50, height - 55)
        
        # –ü–æ–ª—É—á–∞–µ–º —É—Å–ª—É–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        session = db.get_session()
        services = session.query(Service).all()
        session.close()
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —É—Å–ª—É–≥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = {}
        for service in services:
            if service.category not in categories:
                categories[service.category] = []
            categories[service.category].append(service)
        
        y_position = height - 80
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É—Å–ª—É–≥–∏ –≤ PDF
        c.setFont(regular_font, 12)
        
        for category, category_services in categories.items():
            c.setFont(bold_font, 14)
            c.drawString(50, y_position, f"üéÄ {category}")
            y_position -= 25
            
            c.setFont(regular_font, 12)
            for service in category_services:
                if y_position < 100:  # –û—Å—Ç–∞–≤–ª—è–µ–º –º–µ—Å—Ç–æ –¥–ª—è –Ω–∏–∂–Ω–µ–≥–æ –∫–æ–ª–æ–Ω—Ç–∏—Ç—É–ª–∞
                    c.showPage()
                    y_position = height - 50
                    c.setFont(regular_font, 12)
                
                service_text = f"‚Ä¢ {service.name}"
                price_text = f"{service.price} —Ä—É–±."
                duration_text = f"{service.duration} –º–∏–Ω."
                master_text = f"–ú–∞—Å—Ç–µ—Ä: {service.master}"
                
                c.drawString(70, y_position, service_text)
                c.drawString(width - 150, y_position, price_text)
                c.drawString(width - 80, y_position, duration_text)
                y_position -= 20
                c.setFont(regular_font, 10)
                c.drawString(70, y_position, master_text)
                y_position -= 25
                c.setFont(regular_font, 12)
            
            y_position -= 15
        
        # –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if y_position < 150:
            c.showPage()
            y_position = height - 50
        
        c.setFont(bold_font, 16)
        c.drawString(50, y_position, "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        y_position -= 30
        
        c.setFont(regular_font, 12)
        contacts = [
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {config.PHONE_NUMBER}",
            f"üåê –°–∞–π—Ç: {config.WEBSITE_URL}",
            f"üì¢ Telegram –∫–∞–Ω–∞–ª: {config.TELEGRAM_CHANNEL}",
            f"üìç –ê–¥—Ä–µ—Å: —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123"
        ]
        
        for contact in contacts:
            if y_position < 50:
                c.showPage()
                y_position = height - 50
                c.setFont(regular_font, 12)
            
            c.drawString(50, y_position, contact)
            y_position -= 25
        
        # –§—É—Ç–µ—Ä
        c.setFont(regular_font, 10)
        c.drawString(50, 30, f"–ü—Ä–∞–π—Å-–ª–∏—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {datetime.now().strftime('%d.%m.%Y %H:%M')}")
        
        c.save()
        print(f"PDF generated: {filename}")
        return filename
        
    except Exception as e:
        print(f"Error generating PDF: {e}")
        import traceback
        traceback.print_exc()
        return None

# –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    from datetime import datetime
    generate_price_list()