from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler
from config import Config, check_config
from client_handlers import *
from admin_handlers import *
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    filename='bot.log',
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)

def main():
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    check_config()
    
    if not Config.TOKEN_LOADED:
        logger.error("BOT_TOKEN –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª.")
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(Config.BOT_TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    client_conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex('^(üíÖ –ú–∞–Ω–∏–∫—é—Ä|üë£ –ü–µ–¥–∏–∫—é—Ä)$'), handle_category)
        ],
        states={
            CATEGORY: [
                MessageHandler(filters.Regex('^(üíÖ –ú–∞–Ω–∏–∫—é—Ä|üë£ –ü–µ–¥–∏–∫—é—Ä)$'), handle_category)
            ],
            SERVICE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_service)
            ],
            MASTER: [
                MessageHandler(filters.Regex(r'^üí∞ \d+ —Ä—É–±\.$'), handle_master),
                MessageHandler(filters.Regex('^–ù–∞–∑–∞–¥$'), handle_service)
            ],
            PHONE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_phone)
            ]
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admin_conv_handler = ConversationHandler(
        entry_points=[CommandHandler('admin', admin_start)],
        states={
            ADMIN_MAIN: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_admin_actions)
            ],
            ADMIN_MASTERS: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_masters_management)
            ]
        },
        fallbacks=[CommandHandler('cancel', admin_cancel)]
    )
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler('start', start))
    application.add_handler(client_conv_handler)
    application.add_handler(admin_conv_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    application.add_handler(MessageHandler(filters.Regex('^üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å$'), handle_contact))
    application.add_handler(MessageHandler(filters.Regex('^üåê –ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç$'), handle_website))
    application.add_handler(MessageHandler(filters.Regex('^üì¢ –ü–µ—Ä–µ–π—Ç–∏ –≤ Telegram –∫–∞–Ω–∞–ª$'), handle_channel))
    application.add_handler(MessageHandler(filters.Regex('^üìç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–¥—Ä–µ—Å –Ω–∞ –∫–∞—Ä—Ç–µ$'), handle_location))
    application.add_handler(MessageHandler(filters.Regex('^üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–∞–π—Å –≤ PDF$'), handle_price))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    
    application.run_polling()

if __name__ == '__main__':
    main()