from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
import logging
from config import config, logger
from database import db, Service, Client, Order, BotSettings

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.from_user.id in config.ADMIN_IDS:
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    await show_main_menu(update)

async def show_main_menu(update: Update):
    session = db.get_session()
    try:
        settings = session.query(BotSettings).first()
        welcome_message = settings.welcome_message if settings else "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Å—Ç—É–¥–∏—é –º–∞–Ω–∏–∫—é—Ä–∞!"
        
        keyboard = [
            ['üíÖ –ú–∞–Ω–∏–∫—é—Ä', 'ü¶∂ –ü–µ–¥–∏–∫—é—Ä'],
            ['üì¢ –ü–µ—Ä–µ–π—Ç–∏ –≤ Telegram –∫–∞–Ω–∞–ª', 'üåê –ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç'],
            ['üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å', 'üìç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–¥—Ä–µ—Å –Ω–∞ –∫–∞—Ä—Ç–µ'],
            ['üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–∞–π—Å –≤ PDF']
        ]
        
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text(welcome_message, reply_markup=reply_markup)
        
    except Exception as e:
        logger.error(f"Error in show_main_menu: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        session.close()

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {text}")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if text == 'üíÖ –ú–∞–Ω–∏–∫—é—Ä':
        await show_services(update, '–ú–∞–Ω–∏–∫—é—Ä')
    elif text == 'ü¶∂ –ü–µ–¥–∏–∫—é—Ä':
        await show_services(update, '–ü–µ–¥–∏–∫—é—Ä')
    elif text == 'üì¢ –ü–µ—Ä–µ–π—Ç–∏ –≤ Telegram –∫–∞–Ω–∞–ª':
        await update.message.reply_text(f"–ù–∞—à Telegram –∫–∞–Ω–∞–ª: {config.TELEGRAM_CHANNEL}")
    elif text == 'üåê –ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç':
        await update.message.reply_text(f"–ù–∞—à —Å–∞–π—Ç: {config.WEBSITE_URL}")
    elif text == 'üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å':
        await update.message.reply_text(f"–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: {config.PHONE_NUMBER}")
    elif text == 'üìç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–¥—Ä–µ—Å –Ω–∞ –∫–∞—Ä—Ç–µ':
        await update.message.reply_location(
            latitude=config.LOCATION_LAT,
            longitude=config.LOCATION_LON
        )
    elif text == 'üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–∞–π—Å –≤ PDF':
        from create_pdf import generate_price_list
        pdf_path = generate_price_list()
        if pdf_path:
            with open(pdf_path, 'rb') as pdf_file:
                await update.message.reply_document(
                    document=pdf_file,
                    caption="–ù–∞—à –ø—Ä–∞–π—Å-–ª–∏—Å—Ç"
                )
        else:
            await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
    elif ' - ' in text and ' —Ä—É–±. (' in text:
        service_name = text.split(' - ')[0]
        await show_service_details(update, service_name)
    elif text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        await show_main_menu(update)
    elif text.startswith('–í—ã–±—Ä–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞'):
        master_name = text.split('(')[1].split(')')[0]
        await ask_for_phone(update, context, master_name)
    elif 'awaiting_phone' in context.user_data:
        await process_phone_input(update, context)
    else:
        await show_main_menu(update)

# ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (show_services, show_service_details, ask_for_phone, process_phone_input)