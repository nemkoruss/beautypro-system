from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler
from config import config, logger
from database import db
from client_handlers import (
    start, handle_message, show_services, select_service, 
    select_master, enter_phone, cancel,
    SELECT_SERVICE, SELECT_MASTER, ENTER_PHONE
)
from admin_handlers import (
    admin_panel, admin_main_handler, add_service, broadcast_message,
    edit_welcome_message, show_clients_list, show_orders_list, admin_cancel,
    ADMIN_MAIN, ADD_SERVICE, BROADCAST_MESSAGE, EDIT_WELCOME_MESSAGE
)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        db.init_db()
        logger.info("Database initialized successfully")
    except Exception as e:
        logger.error(f"Error initializing database: {e}")
        return

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(config.BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
    client_conversation = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex('^(üíÖ –ú–∞–Ω–∏–∫—é—Ä|ü¶∂ –ü–µ–¥–∏–∫—é—Ä)$'), handle_message)],
        states={
            SELECT_SERVICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_service)],
            SELECT_MASTER: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_master)],
            ENTER_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, enter_phone)]
        },
        fallbacks=[CommandHandler('cancel', cancel)],
        allow_reentry=True
    )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admin_conversation = ConversationHandler(
        entry_points=[CommandHandler('admin', admin_panel)],
        states={
            ADMIN_MAIN: [MessageHandler(filters.TEXT & ~filters.COMMAND, admin_main_handler)],
            ADD_SERVICE: [MessageHandler(filters.TEXT & ~filters.COMMAND, add_service)],
            BROADCAST_MESSAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, broadcast_message)],
            EDIT_WELCOME_MESSAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, edit_welcome_message)]
        },
        fallbacks=[CommandHandler('cancel', admin_cancel)],
        allow_reentry=True
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(client_conversation)
    application.add_handler(admin_conversation)
    application.add_handler(CommandHandler('start', start))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("Bot started successfully")
    application.run_polling()

if __name__ == '__main__':
    main()